// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.search.v2.model;

import com.google.gson.annotations.SerializedName;

public class SchemaDisplayOption {

  /**
   * 对外展示的标签名
   * <p> 示例值：
   */
  @SerializedName("display_label")
  private String displayLabel;
  /**
   * 对外展示类型
   * <p> 示例值：
   */
  @SerializedName("display_type")
  private String displayType;

  // builder 开始
  public SchemaDisplayOption() {
  }

  public SchemaDisplayOption(Builder builder) {
    /**
     * 对外展示的标签名
     * <p> 示例值：
     */
    this.displayLabel = builder.displayLabel;
    /**
     * 对外展示类型
     * <p> 示例值：
     */
    this.displayType = builder.displayType;
  }

  public static Builder newBuilder() {
    return new Builder();
  }

  public String getDisplayLabel() {
    return this.displayLabel;
  }

  public void setDisplayLabel(String displayLabel) {
    this.displayLabel = displayLabel;
  }

  public String getDisplayType() {
    return this.displayType;
  }

  public void setDisplayType(String displayType) {
    this.displayType = displayType;
  }

  public static class Builder {

    /**
     * 对外展示的标签名
     * <p> 示例值：
     */
    private String displayLabel;
    /**
     * 对外展示类型
     * <p> 示例值：
     */
    private String displayType;

    /**
     * 对外展示的标签名
     * <p> 示例值：
     *
     * @param displayLabel
     * @return
     */
    public Builder displayLabel(String displayLabel) {
      this.displayLabel = displayLabel;
      return this;
    }


    /**
     * 对外展示类型
     * <p> 示例值：
     *
     * @param displayType
     * @return
     */
    public Builder displayType(String displayType) {
      this.displayType = displayType;
      return this;
    }

    /**
     * 对外展示类型
     * <p> 示例值：
     *
     * @param displayType {@link com.lark.oapi.service.search.v2.enums.SchemaDisplayOptionDisplayTypeEnum}
     * @return
     */
    public Builder displayType(
        com.lark.oapi.service.search.v2.enums.SchemaDisplayOptionDisplayTypeEnum displayType) {
      this.displayType = displayType.getValue();
      return this;
    }


    public SchemaDisplayOption build() {
      return new SchemaDisplayOption(this);
    }
  }
}
